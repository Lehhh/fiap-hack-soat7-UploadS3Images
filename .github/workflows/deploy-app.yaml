name: Build and Deploy app in Kubernetes

on:
  push:
    branches:
      - main
      - master
      - develop
      - 'releases/**'
      - 'feature/**'
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup kubectl for EKS
        run: |
          aws eks --region us-east-1 update-kubeconfig --name eks-cluster

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ vars.ECR_REPOSITORY_URL }}

      - name: Create ECR repository
        run: |
          aws ecr describe-repositories --repository-names ${{ vars.ECR_REPOSITORY_URL }}${{ vars.IMAGE_UPLOADS3 }} --region us-east-1 || \
          aws ecr create-repository --repository-name${{ vars.IMAGE_UPLOADS3 }} --region us-east-1

      - name: Build Docker image
        run: docker build -t ${{ vars.ECR_REPOSITORY_URL }}${{ vars.IMAGE_UPLOADS3 }}:1.0.1 .

      - name: Push Docker image to ECR
        run: docker push ${{ vars.ECR_REPOSITORY_URL }}${{ vars.IMAGE_UPLOADS3 }}:1.0.1

      - name: Replace image placeholder
        run: sed -i 's|IMAGE_CORE_PLACEHOLDER|${{ vars.ECR_REPOSITORY_URL }}${{ vars.IMAGE_UPLOADS3 }}:1.0.1|g' .kube/app/app-deployment.yaml

      - name: Replace image placeholder
        run: sed -i 's|IMAGE_CORE_PLACEHOLDER|${{ vars.ECR_REPOSITORY_URL }}${{ vars.IMAGE_UPLOADS3 }}:1.0.1|g' .kube/app/app-deployment-video.yaml


      - name: Apply Kubernetes deployment video
        working-directory: .kube/app
        run: kubectl apply -f app-deployment-video.yaml --namespace ${{ secrets.NAMESPACE }} || true

      - name: Apply Kubernetes deployment image
        working-directory: .kube/app
        run: kubectl apply -f app-deployment.yaml --namespace ${{ secrets.NAMESPACE }} || true
